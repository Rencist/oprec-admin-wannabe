// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// For Authentication

enum Role {
  ADMIN
  USER
}

model User {
  id           String         @id @default(uuid())
  fullname     String
  email        String         @unique
  password     String
  role         Role           @default(USER)
  shortens     Shorten[]
  loginAttempt Login_Attempt?
  createdAt    DateTime?      @default(now())
  updatedAt    DateTime       @default(now())
}

model list_lab {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  desciption    String          @db.VarChar(512)
  createdAt     DateTime?       @default(now())
  updatedAt     DateTime        @default(now())
  list_admin    list_admin[]
  pendaftar_lab pendaftar_lab[]
}

model list_admin {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  list_lab_id Int
  listLabId   list_lab? @relation(fields: [list_lab_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  createdAt   DateTime? @default(now())
  updatedAt   DateTime  @default(now())
}

model Login_Attempt {
  id           Int       @id @default(autoincrement())
  userId       String?   @unique
  user         User?     @relation(fields: [userId], references: [id])
  limitTime    DateTime?
  countAttempt Int
}

model pendaftar_lab {
  id          String    @id @default(uuid())
  name        String
  list_lab_id Int
  nrp         String    @unique
  no_telp     String
  alasan      String
  motivasi    String
  link_kreasi String
  listLabId   list_lab? @relation(fields: [list_lab_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  createdAt   DateTime? @default(now())
  updatedAt   DateTime  @default(now())
}

// Url Shortener

model Shorten {
  id         Int       @id @default(autoincrement())
  url        String    @db.VarChar(255)
  alias      String    @unique @db.VarChar(255)
  expiration DateTime?
  userId     String

  createdBy User?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  createdAt DateTime @default(now())
}
